:root {
    --teamRed: #b00c0c;
    --teamBlue: #063eb8;
}

.bingo-body {
    display: flex;
    align-items: center;
    width: 100vw;
    height: 100%;
}

.team-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    align-content: center;

    min-height: 80%;
    --teamColor: #333333;
    background: var(--teamColor);
}
.team-box > p {
    margin: .2em .5em;
    font-size: 110%;
}

#teamNeutral {
    flex-direction: row;

    min-height: 0;
    min-width: 80%;

    border-top-left-radius: var(--border-radius);
    border-top-right-radius: var(--border-radius);
}
#teamNeutral > p {
    margin: .5em 1em;
}

.actions{ 
    display: flex;
    flex-direction: row;

    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);

    gap: 30px;

    border-bottom : 2px solid #000;
    border-right: 2px solid #000;
    border-left: 2px solid #000;
}


.grid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    align-content: center;
    flex-grow: 1;
    height: 70%;

    margin: auto 7em;
    text-align: center;
}
.grid > * {
    align-content: center;

    margin: .3em;
    border: var(--outlineThickness) solid transparent;
    padding: .5em;

    --overlay: linear-gradient(transparent);
    border-radius: var(--border-radius);
    background: var(--overlay), var(--background-dark);

    animation-name: animateCounter;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}
.grid > *:hover{
    outline-color: var(--neon-blue);
    border-color: var(--neon-pink);
    animation-name: outlineHover, animateCounter;
    animation-duration: 2s, 1s;
}

.score{
    display: flex;
    flex-direction: row;
    position: absolute;
    top: 12%;
    left: 50%;
    transform: translateX(-50%);
}

.score div{
    font-size: 20px;
    display: flex;
    padding: 10px;
}


@property --animationCounter {
    syntax: "<number>";
    initial-value: 0;
    inherits: false;
}
@keyframes animateCounter {
from {
    --animationCounter: 0;
}
to {
    --animationCounter: 1;
}
}